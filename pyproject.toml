[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytac"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
description = "Python Toolkit for Accelerator Controls"
dependencies = ["numpy", "scipy", "setuptools>=60.0.0"]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.rst"
requires-python = ">=3.7"

[project.optional-dependencies]
dev = [
    "black",
    "mypy",
    "flake8-isort",
    "Flake8-pyproject",
    "pipdeptree",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest",
    "pytest-cov",
    "pytest-lazy-fixture",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "testfixtures",
    "tox-direct",
    "types-mock",
]

[project.scripts]
pytac = "pytac.__main__:main"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/pytac"

[[project.authors]] # Further authors may be added by duplicating this section
email = "diamhighlvlapps@diamond.ac.uk"
name = "Will Rogers"


[tool.setuptools_scm]
write_to = "src/pytac/_version.py"

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules

[tool.isort]
float_to_top = true
profile = "black"

[tool.flake8]
extend-ignore = [
    "E203", # See https://github.com/PyCQA/pycodestyle/issues/373
    "E402", # allow isort:skip
    "F811", # support typing.overload decorator
    "F722", # allow Annotated[typ, some_func("some string")]
]
# per-file-ignore = ["src/pytac/__init__.py:E402"]
max-line-length = 88       # Respect black's line length (default 88),
exclude = [".tox", "venv"]


[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    --cov=pytac --cov-report term --cov-report xml:cov.xml
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "src tests"

[tool.coverage.run]
data_file = "/tmp/pytac.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest,docs}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals = 
    pytest 
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pytest: pytest {posargs}
    mypy: mypy src tests {posargs}
    pre-commit: pre-commit run --all-files {posargs}
    docs: sphinx-{posargs:build -EW --keep-going} -T docs build/html
"""
